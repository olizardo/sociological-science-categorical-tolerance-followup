---
  title: "Sociological Science Categorical Tolerance Follow-up"
  author: "Omar Lizardo"
  date: "`r Sys.Date()`"
---

# Setup
```{r setup, include=FALSE}
     knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
     library(conflicted)
     library(here)
     library(dplyr)
     library(tidyr)
     library(webshot)
     library(qualtRics)
     library(kableExtra)
     library(ggplot2)
     library(sjPlot)
     library(pscl)
     conflicts_prefer(dplyr::filter)
     conflicts_prefer(dplyr::select)
     conflicts_prefer(dplyr::summarize)
```

```{r Getting and Wrangling Data (Lucid)}
   dat.25 <- fetch_survey(surveyID = "SV_80RzX3ibOsBq3Lo") %>% 
      slice(-1) %>% #getting rid of first row 
      filter(Q_RecaptchaScore  > 0.50) %>%  #removing suspected bots
      filter(DistributionChannel != "preview") 
```

# Data Wrangling

```{r Demographics and Dislikes Data}
     source(here("Functions", "dat.genres.R"))
     source(here("Functions", "dat.demog2.R"))
    # Lucid Data
     dat.dis.25 <- dat.genres(dat.25)$dat.g %>%
          mutate(across(Classical:Metal, function(x) {if_else(x < 3, 1, 0)})) %>% 
          rowwise() %>% 
          mutate(num.dis = sum(c_across(Classical:Metal), na.rm = T)) %>% 
          ungroup() %>% 
          mutate(bin.dis = if_else(num.dis == 0, 1, 0)) %>% 
          left_join(dat.demog2(dat.25))
```

# Descriptives

```{r Dislikes Table}
    dat.g.25 <- dat.dis.25[, c("id", "Classical", "Country", "Disco",
                            "Jazz", "Musicals", "Pop", "R_and_B",
                            "Rap", "Reggae", "Rock", "EDM", "Metal")] %>% 
      pivot_longer(cols = c(2:13), names_to = "Genre", values_to = "Dislike") %>% 
      group_by(Genre) %>% 
      summarize(Proportion = mean(Dislike)) %>% 
      mutate(Proportion = Proportion * 100) %>% 
      mutate(Proportion = round(Proportion, 1)) %>% 
      data.frame()
    
     dat.g.25 <- dat.g.25[order(dat.g.25[, "Proportion"], decreasing = TRUE), ]
     kbl(dat.g.25, caption = "", format = "html", align = c("l", "c", "l", "c"), row.names = F,
          col.names = c("Genre", "Proportion")) %>% 
          kable_classic_2(full_width = F, 
          html_font = "Garamond", font_size = 20) %>% 
          save_kable(here("Tabs", "desc-tab-dislike.html"))
     webshot(here("Tabs", "desc-tab-dislike.html"), here("Tabs", "desc-tab-dislike.png"))
```

```{r Functions}
     make.lolli.plot <- function(w, a = 0, v = 0, h = 0) {
          p <- ggplot(data = w, aes(x = w[,1], y = w[,2]))
          p <- p + geom_point(size = 5, color = "blue")
          p <- p + geom_segment(aes(x = w[,1], xend = w[,1], y = 0, yend = w[,2]), 
                       color = "blue", linewidth =  1) 
          p <- p + theme_minimal() + labs(x = "", y = "")
          p <- p + theme(axis.text = element_text(size = 12),
                         axis.text.x = element_text(angle = a, vjust = v, hjust = h),
                         axis.title = element_text(size = 12))
          return(p)
          }
     make.plot.dat <- function(w, x, y) {
     b <- w %>% 
          select({{x}}, {{y}}) %>% 
          group_by({{x}}) %>% 
          summarize(Proportion = mean({{y}})) %>% 
          data.frame() %>% 
          na.omit()
          return(b)
          }
```

```{r}
      dat.count.25 <- dat.dis.25 %>% 
        group_by(num.dis) %>% 
        summarize(n = n()) %>% 
        mutate(Proportion = n/sum(n)) %>% 
        rename(Count = num.dis) %>% 
        mutate(Count = as.factor(Count)) %>% 
        select(Count, Proportion)
      p <- ggplot(data = dat.count.25, aes(Count, y = Proportion, group = 1))
      p <- p + geom_vline(xintercept = 2, color = "red", linetype = 2, linewidth = .5)
      p <- p + geom_line(color = "blue") 
      p <- p + geom_point(size = 4, color = "blue")
      p <- p + theme_minimal() 
      p <- p + labs(x = "Number of Dislikes", y = "")
      p <- p + theme(axis.text = element_text(size = 12),
                     axis.text.x = element_text(hjust = 0.6),
                     axis.title = element_text(size = 12))
      p <- p + ylim(0, 0.25)
      p
     save_plot(here("Plots", "uni-dist-cat-tol.png"), height = 15, width = 15)
```


```{r Bivariate Plots}
     # Cat. Tolerance
     make.lolli.plot(make.plot.dat(dat.dis.25, Age, bin.dis), a = 35)
     save_plot(here("Plots", "uni-dist-cat-tol-age.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Inc, bin.dis), a = 52, v = 1.1, h = 1)
     save_plot(here("Plots", "uni-dist-cat-tol-inc.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, PolViews, bin.dis), a = 55, v = 1.1, h = 1)
     save_plot(here("Plots", "uni-dist-cat-tol-pol.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Educ, bin.dis), a = 45, v = 1.1, h = 1)
     save_plot(here("Plots", "uni-dist-cat-tol-edu.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Race, bin.dis)[-5, ]) + coord_flip()
     save_plot(here("Plots", "uni-dist-cat-tol-rac.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Gender, bin.dis)[1:2, ]) + coord_flip()
     save_plot(here("Plots", "uni-dist-cat-tol-gen.png"), height = 15, width = 15)
     # Graded Intolerance
     make.lolli.plot(make.plot.dat(dat.dis.25, Age, num.dis), a = 35)
     save_plot(here("Plots", "uni-dist-grd-int-age.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Inc, num.dis), a = 52, v = 1.1, h = 1)
     save_plot(here("Plots", "uni-dist-grd-int-inc.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, PolViews, num.dis), a = 55, v = 1.1, h = 1)
     save_plot(here("Plots", "uni-dist-grd-int-pol.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Educ, num.dis), a = 45, v = 1.1, h = 1)
     save_plot(here("Plots", "uni-dist-grd-int-edu.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Race, num.dis)[-5, ]) + coord_flip()
     save_plot(here("Plots", "uni-dist-grd-int-rac.png"), height = 15, width = 15)
     make.lolli.plot(make.plot.dat(dat.dis.25, Gender, num.dis)[1:2, ]) + coord_flip()
     save_plot(here("Plots", "uni-dist-grd-int-gen.png"), height = 15, width = 15)

```


# Regression
```{r Regression Analysis}
     m1 <- zeroinfl(
       num.dis ~  Age.n + Educ.n + polviews.n + White + Black | 
            Age.n + Woman + Asian, 
       data = dat.dis
       )
     tab_model(m1, transform = NULL, 
               file = here("Tabs", "zinf-reg.html"), 
               auto.label = TRUE, dv.labels = c("Lucid 2025"), 
               CSS = list(css.table = 'font-size: 12px;',
                          css.td = 'border-bottom: 0px;'), 
               show.zeroinf = TRUE, show.ci = FALSE)
```



