---
  title: "Sociological Science Categorical Tolerance Follow-up"
  author: "Omar Lizardo"
  date: "`r Sys.Date()`"
---

# Setup
```{r setup, include=FALSE}
     knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
     library(conflicted)
     library(here)
     library(dplyr)
     library(tidyr)
     library(webshot)
     library(qualtRics)
     library(kableExtra)
     library(ggplot2)
     library(sjPlot)
     library(pscl)
     conflicts_prefer(dplyr::filter)
     conflicts_prefer(dplyr::select)
     conflicts_prefer(dplyr::summarize)
```

```{r Getting Data (Lucid)}
   dat.25 <- fetch_survey(surveyID = "SV_80RzX3ibOsBq3Lo") %>% 
      slice(-1) %>% #getting rid of first row 
      filter(Q_RecaptchaScore  > 0.50) %>%  #removing suspected bots
      filter(DistributionChannel != "preview") 
   dat.23 <- fetch_survey(surveyID = "SV_dd88aecMxMf0lmK") %>% 
      slice(-1) %>% #getting rid of first row 
      filter(Q_RecaptchaScore  > 0.50) %>% 
      filter(DistributionChannel != "preview")
```

# Data Wrangling

```{r Wrangling Dislikes Data and Merging Demographics}
     source(here("Functions", "dat.genres.R"))
     source(here("Functions", "dat.demog.R"))
    # Lucid Data
     dat.dis.25 <- dat.genres(dat.25)$dat.g %>%
          mutate(across(Classical:Metal, function(x) {if_else(x < 3, 1, 0)})) %>% 
          rowwise() %>% 
          mutate(num.dis = sum(c_across(Classical:Metal), na.rm = TRUE)) %>% 
          ungroup() %>% 
          mutate(bin.dis = if_else(num.dis == 0, 1, 0)) %>% 
          left_join(dat.demog(dat.25))
    # Prolific Data
     dat.dis.23 <- dat.genres(dat.23)$dat.g %>%
          mutate(across(Classical:Metal, function(x) {if_else(x < 3, 1, 0)})) %>% 
          rowwise() %>% 
          mutate(num.dis = sum(c_across(Classical:Metal), na.rm = TRUE)) %>% 
          ungroup() %>% 
          mutate(bin.dis = if_else(num.dis == 0, 1, 0)) %>% 
          left_join(dat.demog(dat.23))
     # All Data
     dat.dis <- rbind(dat.dis.23, dat.dis.25)
```

# Descriptives

```{r Dislikes Data}
    dat.g.25 <- dat.dis.25[, c("id", "Classical", "Country", "Disco",
                            "Jazz", "Musicals", "Pop", "R_and_B",
                            "Rap", "Reggae", "Rock", "EDM", "Metal")] %>% 
      pivot_longer(cols = c(2:13), names_to = "Genre", values_to = "Dislike") %>% 
      group_by(Genre) %>% 
      summarize(Proportion = mean(Dislike)) %>% 
      mutate(Proportion = Proportion * 100) %>% 
      mutate(Proportion = round(Proportion, 1)) %>% 
      data.frame()
     dat.g.25 <- dat.g.25[order(dat.g.25[, "Proportion"], decreasing = TRUE), ]
     
    dat.g.23 <- dat.dis.23[, c("id", "Classical", "Country", "Disco",
                            "Jazz", "Musicals", "Pop", "R_and_B",
                            "Rap", "Reggae", "Rock", "EDM", "Metal")] %>% 
      pivot_longer(cols = c(2:13), names_to = "Genre", values_to = "Dislike") %>% 
      group_by(Genre) %>% 
      summarize(Proportion = mean(Dislike)) %>% 
      mutate(Proportion = Proportion * 100) %>% 
      mutate(Proportion = round(Proportion, 1)) %>% 
      data.frame()
     dat.g.23 <- dat.g.23[order(dat.g.23[, "Proportion"], decreasing = TRUE), ]
     dat.g <- cbind(dat.g.23, dat.g.25)
```
     
```{r Dislikes Table}
     kbl(dat.g, caption = "", format = "html", align = c("l", "c", "l", "c"), row.names = F,
          col.names = c("Genre", "Percentage Dislike (Prolific)",
                        "Genre", "Percentage Dislike (Lucid)")) %>% 
          kable_classic_2(full_width = T, 
          html_font = "Garamond", font_size = 20) %>% 
          footnote(general = "N = 1408 (Prolific); N = 898 (Lucid); N = 2306 (All)") %>% 
          save_kable(here("Tabs", "desc-tab-dislike.html"))
     webshot(here("Tabs", "desc-tab-dislike.html"), here("Tabs", "desc-tab-dislike.png"))
```

```{r Plot Functions}
     make.lolli.plot <- function(w, a = 0, v = 0, h = 0, refline = TRUE, ref = 0) {
          p <- ggplot(data = w, aes(x = w[,1], y = w[,2]))
          p <- p + geom_point(size = 7, color = "blue")
          p <- p + geom_hline(yintercept = ref, 
                              color = "red", linetype = 2, linewidth = 1)
          p <- p + geom_segment(aes(x = w[,1], xend = w[,1], y = 0, yend = w[,2]), 
                       color = "blue", linewidth =  1) 
          p <- p + theme_minimal() + labs(x = "", y = "")
          p <- p + theme(axis.text = element_text(size = 16),
                         axis.text.x = element_text(angle = a, vjust = v, hjust = h),
                         axis.title = element_text(size = 16))
          return(p)
          }
     make.plot.dat <- function(w, x, y) {
     b <- w %>% 
          select({{x}}, {{y}}) %>% 
          group_by({{x}}) %>% 
          summarize(Proportion = mean({{y}})) %>% 
          data.frame() %>% 
          na.omit()
          return(b)
          }
```

```{r Univariate Distribution Data}
      dat.count.25 <- dat.dis.25 %>% 
        group_by(num.dis) %>% 
        summarize(n = n()) %>% 
        mutate(Prop.25 = n/sum(n)) %>% 
        rename(Count = num.dis) %>% 
        mutate(Count = as.factor(Count)) %>% 
        select(Count, Prop.25) %>% 
        data.frame()

      dat.count.23 <- dat.dis.23 %>% 
        group_by(num.dis) %>% 
        summarize(n = n()) %>% 
        mutate(Prop.23 = n/sum(n)) %>% 
        rename(Count = num.dis) %>% 
        mutate(Count = as.factor(Count)) %>% 
        select(Count, Prop.23) %>% 
        data.frame()
      
      dat.count <- dat.dis %>% 
        group_by(num.dis) %>% 
        summarize(n = n()) %>% 
        mutate(Prop = n/sum(n)) %>% 
        rename(Count = num.dis) %>% 
        mutate(Count = as.factor(Count)) %>% 
        select(Count, Prop) %>% 
        data.frame()
      
      dat.uni <- dat.count.25 %>% 
        left_join(dat.count.23) %>% 
        left_join(dat.count) 
      dat.uni[is.na(dat.uni)] <- 0
      dat.uni <- dat.uni[, c("Count", "Prop.23", "Prop.25", "Prop")]
      dat.uni
```

```{r Univariate Table}
     kbl(dat.uni, caption = "", format = "html", align = c("l", "c", "c", "c"), 
         row.names = F, digits = 3,
          col.names = c("Count", "Proportion (Prolific)", "Proportion (Lucid)", 
                        "Proportion (All)")) %>% 
          kable_classic_2(full_width = T, html_font = "Garamond", font_size = 20) %>%
          footnote(general = "N = 1408 (Prolific); N = 898 (Lucid); N = 2306 (All)") %>% 
          save_kable(here("Tabs", "desc-tab-dislike-dist.html")) 
     webshot(here("Tabs", "desc-tab-dislike-dist.html"), here("Tabs", "desc-tab-dislike-dist.png"))
```

```{r Univariate Distribution Plot}
      p <- ggplot(data = dat.count, aes(Count, y = Prop, group = 1))
      p <- p + geom_vline(xintercept = 2, color = "red", linetype = 2, linewidth = 1)
      p <- p + geom_line(color = "blue", linewidth = 1) 
      p <- p + geom_point(size = 6, color = "blue")
      p <- p + theme_minimal() 
      p <- p + labs(x = "Number of Dislikes", y = "")
      p <- p + theme(axis.text = element_text(size = 18),
                     axis.text.x = element_text(hjust = 0.6),
                     axis.title = element_text(size = 18))
      p <- p + ylim(0, 0.25)
      p
     save_plot(here("Plots", "uni-dist-cat-tol.png"), height = 15, width = 20)
```

```{r Bivariate Plots}
     w <- 20
     # Cat. Tolerance
     r <- mean(dat.dis$bin.dis)
     make.lolli.plot(make.plot.dat(dat.dis, Age, bin.dis), a = 35, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-cat-tol-age.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Inc, bin.dis), a = 52, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-cat-tol-inc.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, PolViews, bin.dis), a = 55, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-cat-tol-pol.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Educ, bin.dis), a = 52, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-cat-tol-edu.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Race, bin.dis)[-5, ], ref = r) + coord_flip()
     save_plot(here("Plots", "uni-dist-cat-tol-rac.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Gender, bin.dis)[1:2, ], ref = r) + coord_flip()
     save_plot(here("Plots", "uni-dist-cat-tol-gen.png"), height = 15, width = w)
     # Graded Intolerance
     r <- mean(dat.dis$num.dis)
     make.lolli.plot(make.plot.dat(dat.dis, Age, num.dis), a = 35, ref = r)
     save_plot(here("Plots", "uni-dist-grd-int-age.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Inc, num.dis), a = 52, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-grd-int-inc.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, PolViews, num.dis), a = 55, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-grd-int-pol.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Educ, num.dis), a = 52, v = 1.1, h = 1, ref = r)
     save_plot(here("Plots", "uni-dist-grd-int-edu.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Race, num.dis)[-5, ], ref = r) + coord_flip()
     save_plot(here("Plots", "uni-dist-grd-int-rac.png"), height = 15, width = w)
     make.lolli.plot(make.plot.dat(dat.dis, Gender, num.dis)[1:2, ], ref = r) + coord_flip()
     save_plot(here("Plots", "uni-dist-grd-int-gen.png"), height = 15, width = w)
```


# Regression
```{r Regression Analysis}
     m1 <- zeroinfl(
       num.dis ~  Age.n + Educ.n + Inc.n + polviews.n + White + Woman + year | Age.n + year, 
       data = dat.dis
       )
     m2 <- zeroinfl(
       num.dis ~  Age.n + Educ.n + Inc.n + polviews.n + White + year | Age.n + White + Woman + year, 
       data = dat.dis
       )
     m3 <- zeroinfl(
       num.dis ~  Age.n + Educ.n + Inc.n + polviews.n + White + year | Age.n + White + Woman +
         Educ.n + I(Educ.n^2) + year, 
       data = dat.dis
       )
     m4 <- zeroinfl(
       num.dis ~  Age.n + Educ.n + Inc.n + polviews.n + White + year | Age.n + White +  Woman +
         Educ.n + + I(Educ.n^2) + Inc.n + + I(Inc.n^2) + year, 
       data = dat.dis
       )
     names(m1$coefficients$zero) <- c("Intercept", "Age", "Survey (Prolific 2023)", "Survey (Lucid 2025)")
     names(m2$coefficients$zero) <- c("Intercept", "Age", "White", "Woman", "Survey (Prolific 2023)", 
                                      "Survey (Lucid 2025)")
     names(m3$coefficients$zero) <- c("Intercept", "Age", "White", "Woman",
                                      "Education", "Education Squared", "Survey (Prolific 2023)", "Survey (Lucid 2025)")
     names(m4$coefficients$zero) <- c("Intercept", "Age", "White", "Woman",
                                      "Education", "Education Squared", 
                                      "Income", "Income Squared", "Survey (Prolific 2023)", "Survey (Lucid 2025)")
     tab_model(m1, m2, m3, m4, transform = NULL, digits = 3, prefix.labels = "none",
               file = here("Tabs", "zinf-reg.html"), 
               auto.label = TRUE, dv.labels = c("Model 1", "Model 2", "Model 3", "Model 4"), 
               CSS = list(css.table = 'font-size: 12px;', css.td = 'border-bottom: 0px;'), 
               show.zeroinf = TRUE, show.ci = FALSE,
               pred.labels = c("Intercept", "Age", "Education", "Income", "Pol. Liberalism", 
                               "White", "Woman", "Survey (Prolific 2023)", "Survey (Lucid 2025)")
               )
    webshot(here("Tabs", "zinf-reg.html"), here("Tabs", "zinf-reg.png"), zoom = 4)
```

```{r Predicted Probability Plots Data}
    educ.pred <- ggaverage(m4, terms = c("Educ.n"), type = "zi_prob")
    educ.pred.dat <- data.frame(Educ = 1:6) %>% 
      mutate(Educ = factor(Educ, labels = levels(dat.dis$Educ))) %>% 
      cbind(pr = educ.pred$predicted) %>% 
      cbind(l = educ.pred$conf.low) %>% 
      cbind(h = educ.pred$conf.high) 
    
    inc.pred <- ggaverage(m4, terms = c("Inc.n"), type = "zi_prob")
    inc.pred.dat <- data.frame(Inc = 1:12) %>% 
      mutate(Inc = factor(Inc, labels = levels(dat.dis$Inc))) %>% 
      cbind(pr = inc.pred$predicted) %>% 
      cbind(l = inc.pred$conf.low) %>% 
      cbind(h = inc.pred$conf.high) 
```

```{r Predicted Probability Plots}
    p <- ggplot(data = educ.pred.dat, aes(x = Educ, y = pr))
    p <- p + geom_point(size = 4, color = "blue")
    p <- p + geom_segment(aes(x = Educ, xend = Educ, y = l, yend = h), color = "blue")
    p <- p + geom_hline(yintercept = mean(dat.dis$bin.dis), 
                        color = "red", linetype = 2, linewidth = 1)
    p <- p + theme_sjplot() + labs(x = "", y = "") + ylim(0, 0.5)
    p <- p + theme(axis.text = element_text(size = 16),
                         axis.title = element_text(size = 16))
    p <- p + coord_flip()
    p
    save_plot(here("Plots", "educ-pred-plot.png"), height = 15, width = 20)

    p <- ggplot(data = inc.pred.dat, aes(x = Inc, y = pr))
    p <- p + geom_point(size = 4, color = "blue")
    p <- p + geom_segment(aes(x = Inc, xend = Inc, y = l, yend = h), color = "blue")
    p <- p + geom_hline(yintercept = mean(dat.dis$bin.dis), 
                        color = "red", linetype = 2, linewidth = 1)
    p <- p + theme_sjplot() + labs(x = "", y = "") + ylim(0, 0.3)
    p <- p + theme(axis.text = element_text(size = 16),
                         axis.title = element_text(size = 16))
    p <- p + coord_flip()
    p
    save_plot(here("Plots", "inc-pred-plot.png"), height = 15, width = 20)
```



